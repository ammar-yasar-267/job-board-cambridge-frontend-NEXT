name: Build and deploy Next.js app to Azure Web App - job-board-cambridge

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  APPLICATION_PUBLISH_PROFILE: ${{ secrets.APP_PUBLISH_PROFILE }}
  WEBAPP_NAME: "job-board-cambridge"
  NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: npm install and build
        run: |
          npm ci
          npm run build
        env:
          NEXT_PUBLIC_API_URL: ${{ secrets.NEXT_PUBLIC_API_URL }}

      - name: Prepare standalone build
        run: |
          cp -r ./public ./.next/standalone/public
          cp -r ./.next/static ./.next/standalone/.next/static
          cp next.config.mjs ./.next/standalone/
          # Create web.config
          echo '<?xml version="1.0" encoding="utf-8"?>
          <configuration>
            <system.webServer>
              <handlers>
                <add name="iisnode" path="server.js" verb="*" modules="iisnode" />
              </handlers>
              <rewrite>
                <rules>
                  <rule name="NodeInspector" patternSyntax="ECMAScript" stopProcessing="true">
                    <match url="^server.js\/debug[\/]?" />
                  </rule>
                  <rule name="StaticContent">
                    <action type="Rewrite" url="public{REQUEST_URI}"/>
                  </rule>
                  <rule name="DynamicContent">
                    <conditions>
                      <add input="{REQUEST_FILENAME}" matchType="IsFile" negate="True"/>
                    </conditions>
                    <action type="Rewrite" url="server.js"/>
                  </rule>
                </rules>
              </rewrite>
              <env>
                <add name="PORT" value="8080" />
              </env>
            </system.webServer>
          </configuration>' > ./.next/standalone/web.config
          # Create startup script
          echo "#!/bin/sh
          cd /home/site/wwwroot
          exec node server.js" > ./.next/standalone/startup.sh
          chmod +x ./.next/standalone/startup.sh

      - name: Zip artifact for deployment
        run: |
          cd ./.next/standalone
          zip -r ../../release.zip ./*

      - name: Upload artifact for deployment job
        uses: actions/upload-artifact@v3
        with:
          name: node-app
          path: release.zip

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}

    steps:
      - name: Download artifact from build job
        uses: actions/download-artifact@v3
        with:
          name: node-app

      - name: Unzip artifact for deployment
        run: |
          unzip release.zip
          rm release.zip

      - name: 'Deploy to Azure Web App'
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: 'job-board-cambridge'
          slot-name: 'Production'
          publish-profile: ${{ secrets.APP_PUBLISH_PROFILE }}
          package: .